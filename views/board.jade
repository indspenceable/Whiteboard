doctype 5
html(lang="en")
  head
    title Whiteboard
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js")
    script(src="/socket.io/socket.io.js")
    script
      var drawing = false
      var drawBuffer = []
      var eraseBuffer = []
      
      var canvas
      var context 
      var canvasOffsetX
      var canvasOffsetY
      var lastLocallyCapturedPoint
      var mode = 'drawing'
      var shown = false
      
      function mouseUp() {
        drawing=false
      }
      function mouseDown() {
        drawing = true
      }
      
      function drawInLine(p) {
        var xd = lastLocallyCapturedPoint.x-p.x
        var yd = lastLocallyCapturedPoint.y-p.y
        var steps = Math.abs(xd) + Math.abs(yd) / 5
        for (var i = 0; i < steps; i++) {
          if (mode == 'drawing') {
            var point = {x:Math.floor(p.x + i*(xd) / steps), y:Math.floor(p.y + i*(yd) / steps)}
            draw(point)
            drawBuffer.push(point)
          } else {
            var point = {x:Math.floor(p.x + i*(xd) / steps), y:Math.floor(p.y + i*(yd) / steps)}
            erase(point)
            eraseBuffer.push(point)
          }
        }
      }
      
      function mouseMove(event) {
        var point = {x:event.pageX - canvasOffsetX, y:event.pageY - canvasOffsetY}
        if(drawing && shown) {
          drawInLine(point)
        }
        lastLocallyCapturedPoint = point
      }
      var RAD = 5
      function draw(point) {
        context.fillStyle = '#000'
        context.fillRect(point.x-RAD/2, point.y-RAD/2,RAD,RAD)
      }
      function erase(point) {
        context.fillStyle = '#fff'
        context.fillRect(point.x-RAD/2, point.y-RAD/2,RAD,RAD)
      }
      
      function showCanvas() {
        canvas.show()
        canvasOffsetX = canvas.offset().left
        canvasOffsetY = canvas.offset().top
        shown = true
      }
      
      $(function() {
        canvas = $('canvas')
        canvasOffsetX = 0
        canvasOffsetY = 0
        context = canvas.get(0).getContext('2d')
        context.fillStyle = '#000'
        
        $(document).mouseup(mouseUp).mousedown(mouseDown).mousemove(mouseMove)
        $('.mode').click(function() {
          if (mode == 'drawing') {
            $(this).text("erasing")
            mode = 'Erasing'
          } else {
            $(this).text("drawing")
            mode = 'Drawing'
          }
        })
        
        var socket = io.connect();
        socket.emit('join', {board: "#{board}"})
        
        socket.on('draw', function(data){
          data.points.forEach(draw)
          showCanvas();
        })
        socket.on('erase', function(data){
          data.points.forEach(erase)
        })
        setInterval(function() {
          if(drawBuffer.length > 0) {
            socket.emit('draw', {points: drawBuffer})
            drawBuffer = []
          }
          if (eraseBuffer.length > 0) {
            socket.emit('erase', {points: eraseBuffer})
            eraseBuffer = []
          }
        }, 20)
      })

  body
    h1 #{board}
    .mode Drawing
    canvas(width="500px", height="500px", style="border: 1px solid black")